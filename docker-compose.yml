version: '3'

services:
  # Database
  db:
    image: mysql/mysql-server:latest
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    container_name: ${APP_NAME}-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${WP_DB}
      MYSQL_USER: ${WP_DB_USER}
      MYSQL_PASSWORD: ${WP_DB_PASSWORD}
      command: mysqld --default-authentication-plugin=mysql_native_password --skip-mysqlx
    networks:
      - wpsite
  # phpmyadmin
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} 
      UPLOAD_LIMIT: ${UPLOAD_LIMIT}
    networks:
      - wpsite
    container_name: ${APP_NAME}-phpmyadmin
  # Wordpress
  wordpress:
    depends_on:
      - db
    # image: wordpress:latest
    build:
      context: .
      dockerfile: Dockerfile.wordpress
    ports:
      - "${WP_PORT}:80"
      - "443:443"
    restart: always
    volumes: [
      './wp-content:/var/www/html/wp-content',
      './upload.ini:/usr/local/etc/php/conf.d/uploads.ini',
      ]
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: ${WP_DB}
      WORDPRESS_DB_USER: ${WP_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WP_DB_PASSWORD}
      WORDPRESS_DEBUG: ${WP_DEBUG}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
    networks:
      - wpsite
    container_name: ${APP_NAME}-wordpress
networks:
  wpsite:
volumes:
  db_data: